//var mongoUtility=mongoUtility || {};//either equals mongConnection if it exists, or nothing...this is kind of cool, but over the top for a simple class
"use strict";
var mongoUtility=function(options){//class declaration
    var MongoClient = require('mongodb').MongoClient;
    var self=this;// to give "this" scope regardless in this class
    if(!options.url){//if url not supplied
        self.url='mongodb://localhost:27017/myTestDB'; //default url..does this.url need to be instantiated?  I guess not..
    }
    else{
        self.url=options.url;
    }
    if(!options.collections){
        self.collections="visitors";
    }
    else{
        self.collections=options.collections;
    }
    self.insertData=function(data){
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
                db.collection(self.collections).insert(data, function(err, result){
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success");
                        db.close();
                    }
                });
            }
        });
    }
    self.updateData=function(where, field, data){ 
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
              
                var objectToPass={};
                objectToPass[field]=data;
                db.collection(self.collections).update(where, {$set:objectToPass}, function(err, result){ //update "dateLeft" so we can get average time spent, etc
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success Update");
                        console.log(result.result);
                        //console.log(result.result.nModified);
                        //id=result.ops[0]._id; //if this works ill be shocked!
                        db.close();
                        //callback(result);
                    }
                });
            }
        });
    }
    self.deleteData=function(where){ 
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
                var objectToPass={};
                db.collection(self.collections).remove(where, {justOne:false}, function(err, result){ //update "dateLeft" so we can get average time spent, etc
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success Update");
                        db.close();
                        //callback(result);
                    }
                });
            }
        });
    }
    self.retrieveData=function(where, groupType, aggregateField, groupBy, callback){ //where, type (sum, avg, etc), field to aggregate over, field to group by, callback
        groupBy="$"+groupBy;
        //console.log(typeof(this.collections));
        MongoClient.connect(self.url, function(err, db) {
            if(err){
                console.log(err);
            }
            else{
                var objectToAggregate={};
                objectToAggregate['$'+groupType]=aggregateField;
                db.collection(self.collections).aggregate([
                    {$match:where},
                    {$group:{"_id":groupBy, "value":objectToAggregate}}
                ]).toArray(function(err, result){ 
                    if(err){
                        console.log(err);
                    }
                    else{
                        console.log("Success");
                        db.close();
                        callback(result);
                    }
                });
            }
        });
    }
    
}; 
module.exports=mongoUtility; //exportable class