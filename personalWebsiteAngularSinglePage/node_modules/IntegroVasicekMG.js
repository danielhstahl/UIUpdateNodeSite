"use strict";
var Complex=require('Complex'); //exportable class
var IntegroVasicekMG=function(alpha, sigma, rho, y0, tau){ //systemic risk
	this.m=alpha.length;
	function helpComputeMoments(a){
		return ((1-Math.exp(-a*tau))/a);
	}
	this.variance=[];
	this.expectation=[];
	this.computeMGF=function(v){
		var mm=this.m;//for speed purposes
		for(var i=0; i<mm; i++){
			this.variance[i]=[];
			var ai=helpComputeMoments(alpha[i]);
			this.expectation[i]=(y0[i]-1.0)*ai+tau;
			for(var j=0; j<mm; j++){
				var aj=helpComputeMoments(alpha[j]);
				var helpVarij=(rho[i][j]*sigma[i]*sigma[j]/(alpha[i]*alpha[j]))*(tau-ai-aj+(1-Math.exp(-(alpha[i]+alpha[j])*tau))/(alpha[i]+alpha[j])); //difra page 10
				this.variance[i][j]=helpVarij;
			}
		}
	}
}
IntegroVasicekMG.prototype.execute=function(v){ //vector of u
	var el=new Complex(0, 0);
	var vl=new Complex(0, 0);
	
	if(!this.variance[0]){
		this.computeMGF();
	}
	var mm=this.m;
	for(var i=0; i<mm; i++){
		el=el.add(v[i].multiply(new Complex(this.expectation[i], 0)));
		for(var j=0; j<mm; j++){
			vl=vl.add(v[i].multiply(v[j]).multiply(new Complex(this.variance[i][j], 0)));
		}
	}
	vl=vl.multiply(new Complex(.5, 0)).add(el);
	return vl.exp();
}
module.exports=IntegroVasicekMG;