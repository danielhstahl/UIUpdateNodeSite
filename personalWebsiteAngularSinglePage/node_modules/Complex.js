var Complex=function(real, im){
	this.real=real;
	this.im=im;
}
Complex.prototype.multiply=function(value){
	return new Complex(this.real*value.real-this.im*value.im, this.im*value.real+this.real*value.im);
}
Complex.prototype.exp=function(){
	return new Complex(Math.exp(this.real)*Math.cos(this.im), Math.exp(this.real)*Math.sin(this.im));
}

Complex.prototype.log=function() {
	var modulus=Math.sqrt(this.real*this.real+this.im*this.im);
	return new Complex(Math.log(modulus), Math.atan2(this.im, this.real));
}
Complex.prototype.add=function(value){
	return new Complex(this.real+value.real, this.im+value.im);
}

Complex.prototype.subtract=function(value) {
	return new Complex(this.real-value.real, this.im-value.im);
}
Complex.prototype.divide=function(value){
	var den=value.real*value.real+value.im*value.im;
	return new Complex((this.real*value.real+this.im*value.im)/den, (this.im*value.real-this.real*value.im)/den);
}
Complex.prototype.power=function(exponent){
	var re=this.real;
	var im=this.im;
	var modulus=Math.sqrt(re*re+im*im);
	var arg=Math.atan2(im, re);
	var log_re=Math.log(modulus);
	//var log_im=arg;
	var x_log_re=exponent*log_re;
	var x_log_im=exponent*arg;
	var modulus_ans=Math.exp(x_log_re);
	return new Complex(modulus_ans*Math.cos(x_log_im), modulus_ans*Math.sin(x_log_im));
}
module.exports=Complex; //exportable class

